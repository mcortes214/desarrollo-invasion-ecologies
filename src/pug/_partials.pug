

mixin partials_modal(options, block)
    //- #popup-main.view-togglable-pointer-events.view-fade-in
    #popup-main.u-transition-04s.js-state-components(
        data-component-name="overlay"
        data-component-state="default"
    )
        - let palette;
        - let modalName = options.name;
        - if(options.palette === "material") palette = 'props-palette-material'
        - if(options.palette === "fluid") palette = 'props-palette-fluid'
        div(class=palette)
            .l-flex.shape-fullscreen-overlay.u-background-color-secondary-tr.u-cursor-pointer.js-close-modal(
                data-modal-name=modalName
            )
                div.shape-popup.u-color-primary.u-background-color-secondary-tr.l-responsive-padding(style="--m: 2em; --d: 4em").u-cursor-auto.u-overflow-y-scroll
                    -if(block)
                        block

//- mixin partials_sea-object(config)
//-     - const {scriptDependencies, linkScripts, color, className, link} = config;
//-     //- Create rigged objects
//-     - const a = `${Math.floor(Math.random()*360)} ${Math.floor(Math.random()*360)} ${Math.floor(Math.random()*360)}`;
//-     - const rad = (className === 'greenSmall') ? '0.5' : '1';
//-     - const geometryString = `primitive: circle; radius: ${rad}`;
//-     - const materialString = `color: ${color}`;
//-     - const classString = `clickable ${className}`;
//-     - const positionString = `0 0 -${Math.round(Math.random()*2 + 4)}`;
//-     - const scriptsString = linkScripts ? JSON.stringify(linkScripts) : '[]';
//-     - const dependenciesString = scriptDependencies ? JSON.stringify(scriptDependencies) : '[]';
//-     //-Markup
//-     a-entity.wanderer(animation rotation=a)
//-         a-entity.js-load-content(
//-             class=classString
//-             geometry=geometryString
//-             material=materialString
//-             position=positionString
//-             href=link
//-             data-scripts=scriptsString
//-             data-dependencies=dependenciesString
//-             )



//- TODO: terminar de implementar este componente

mixin partials_new-sea-figure(options)
    //-JS Logic
    -
        const randNum = (min, max) => Math.floor(Math.random()*(max-min) + min);

        const figure = {};
        const {classes, image, contentLoader, wandererAnimation} = options;
        const distanceModifier = Math.random();

        figure.classes = ['clickable'].concat(classes);

        figure.src = image.src;
        figure.aspectRatio = image.aspectRatio;
        figure.width = contentLoader ? 2 : 1;
        figure.height = contentLoader ?
            (figure.aspectRatio ? 2/figure.aspectRatio : 2)
            : (figure.aspectRatio ? 1/figure.aspectRatio : 1);

        figure.position = `0 0 -${distanceModifier * 6 + 4}`;
        figure.initialRotation = `${randNum(-15, 15)} ${randNum(0, 360)} 0`;

        if(contentLoader){
            figure.classes.push('js-load-content');

            figure.modalName = contentLoader.modalName ? contentLoader.modalName : undefined;
            figure.link = contentLoader.link;
            figure.dataScripts = contentLoader.script ? contentLoader.script : undefined;
            figure.beforeInsert = contentLoader.beforeInsert ? contentLoader.beforeInsert : undefined;
            figure.afterInsert = contentLoader.afterInsert ? contentLoader.afterInsert : undefined;
            figure.beforeRemove = contentLoader.beforeRemove ? contentLoader.beforeRemove : undefined;
            figure.afterRemove = contentLoader.afterRemove ? contentLoader.afterRemove : undefined;
        }

        if(wandererAnimation) {
            figure.direction = wandererAnimation.direction;
        }
        
    //-Markup
    a-entity.wanderer(
        animation
        rotation=figure.initialRotation
        data-direction=figure.direction
        data-speed-modifier=distanceModifier
    )
        a-image(
            material="alphaTest: 0.5"
            class=figure.classes.join(' ')
            position=figure.position
            src=figure.src
            href=figure.link
            data-scripts=figure.dataScripts
            data-before-insert=figure.beforeInsert
            data-after-insert=figure.afterInsert
            data-before-remove=figure.beforeRemove
            data-after-remove=figure.afterRemove
            data-modal-name=figure.modalName
            width=figure.width
            height=figure.height
        )








mixin partials_sea-figure(options)
    - const {img, className, link, dependencies, scripts, aspectRatio} = options;
    //- Create rigged objects
        //-Figure
    - const randAng = (min, max) => Math.floor(Math.random()*(max-min) + min);
    - const initialRotationString = `${randAng(-15, 15)} ${randAng(0, 360)} 0`;

    - const rad = (className === 'greenSmall') ? '0.5' : '1';
    - const geometryString = `primitive: circle; radius: ${rad}`;
    - const materialString = `color: ${color}`;
    - const classString = `clickable ${className} ${link ? 'js-load-content' : ''}`;
    - const positionString = `0 0 -${Math.round(Math.random()*2 + 4)}`;
    //- - const scaleString = link ? `2 ${aspectRatio ? 2/aspectRatio : 2} 0.1` : `1 ${aspectRatio ? 1/aspectRatio : 1} 0.1`;
    - const widthString = link ? 2 : 1;
    - const heightString = link ? (aspectRatio ? 2/aspectRatio : 2) : (aspectRatio ? 1/aspectRatio : 1);
        //-Functionality
    - const scriptsString = scripts ? JSON.stringify(scripts) : '[]';
    - const dependenciesString = dependencies ? JSON.stringify(dependencies) : '[]';
    -
        console.log(img);
    //-Markup
    a-entity.wanderer(animation rotation=initialRotationString)
        a-image(
            material="alphaTest: 0.5"
            class=classString
            position=positionString
            src=img
            href=link
            data-scripts=scriptsString
            data-dependencies=dependenciesString
            width=widthString
            height=heightString
        )



mixin partials_test-texto-hover(block)
    audio.u-display-none.audio-player.voice-over(src="audio/voice-over.mp3" preload="metadata" controls="false")
    .player-progress.u-cursor-pointer.l-abs.u-width-100.u-height.u-background-color(
        style="--h: 5px; --b: var(--color-primary)"
        data-audio-player=".voice-over" data-audio-player-behavior="progress"
    )
        .player-progress__ellapsed.u-height-100.u-background-color(
            style="--b: var(--color-accent)"
        )
    .l-flex(style="--j: center")
        img.u-cursor-pointer.audio-control(src="img/icon-play.svg", alt="Play" data-audio-player=".voice-over" data-audio-player-behavior="play")
        img.u-cursor-pointer.audio-control(src="img/icon-pause.svg", alt="Pause" data-audio-player=".voice-over" data-audio-player-behavior="pause")
        img.u-cursor-pointer.audio-control(src="img/icon-stop.svg", alt="Stop" data-audio-player=".voice-over" data-audio-player-behavior="stop")
